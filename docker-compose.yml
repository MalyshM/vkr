version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  backend:
    build:
      context: backend
      dockerfile: ./backend.Dockerfile
    container_name: backend_michael
    ports:
      - '8090:80'
    command: bash -c "cd /backend; python start_db.py; python /backend/scripts/ETL.py; uvicorn main:app --host 0.0.0.0 --port 80;"
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    environment:
      - PYTHONPATH=/backend
    depends_on:
      - db

  tests:
    build:
      context: backend
      dockerfile: ./backend.Dockerfile
    container_name: tests_michael
    command: bash -c "cd /backend; python user_tests.py; python tests/ui_tests.py"
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    environment:
      - PYTHONPATH=/backend
    depends_on:
      - db
      - backend

  frontend:
    image: node:20.10.0
    container_name: frontend_BLOODY_VLADI
    ports:
      - '3000:3000'
    command: bash -c "cd /frontend/for_vlad; npm install ; npm run build ; npm run start"
#    entrypoint: ["bash", "-c", "cd /frontend/for_vlad; npm install ; npm run build ; npm run start"]
    volumes:
      - ./frontend/for_vlad:/frontend/for_vlad

  master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://master:8089

  worker:
    image: locustio/locust
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master